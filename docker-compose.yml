services:
  postgres:
    image: 'postgres'
    restart: always
    environment:
      POSTGRES_DB: complex_db  # The name of the PostgreSQL database to be created
      POSTGRES_USER: postgres  # The PostgreSQL user
      POSTGRES_PASSWORD: postgres_password  # The password for the PostgreSQL user
    volumes:
      - ./server/.pgdata:/var/lib/postgresql/data  # Volume for persisting PostgreSQL data
    ports:
      - 54324:5432  # Expose a different port if 5432 is already in use by Project 1
  redis:
    image: 'redis'
  nginx:
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - '3050:80'
  api:
    build:
      dockerfile: Dockerfile.dev
      context: ./server
    volumes:
      - /app/node_modules
      - ./server:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=complex_db
      - PGPASSWORD=postgres_password
      - PGPORT=5432
  client:
    build:
      dockerfile: Dockerfile.dev
      context: ./client
    volumes:
      - /app/node_modules
      - ./client:/app
  worker:
    build:
      dockerfile: Dockerfile.dev
      context: ./worker
    volumes:
      - /app/node_modules
      - ./worker:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
# Ensure that the PGPORT in the environment of the server service matches the internal port number 
# of the postgres service, not the external one. In your case, PGPORT should be 5432, not 54324